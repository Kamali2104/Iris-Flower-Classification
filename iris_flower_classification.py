# -*- coding: utf-8 -*-
"""iris_flower_classification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gBj-oDv5TVTkz0ypFwm-ccHciwVm6_hz
"""

# CODSOFT Internship - Task 3: Iris Flower Classification
# Author: KAMALEESHWARI P

# Step 1: Upload the IRIS.csv file
from google.colab import files
print(" Upload the IRIS.csv file below:")
uploaded = files.upload()

# Step 2: Import necessary libraries
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

# Step 3: Load the dataset
df = pd.read_csv("IRIS.csv")  # This matches the actual file name you uploaded
print("\n First 5 rows of the dataset:")
print(df.head())

# Step 4: Check column names
print("\n Column names:", df.columns.tolist())

# Step 5: Check for null values
print("\n Missing values:\n", df.isnull().sum())

# Step 6: Visualize dataset with pairplot
sns.pairplot(df, hue='species')
plt.suptitle("Iris Dataset - Pairplot", y=1.02)
plt.show()

# Step 7: Prepare features and target
X = df.drop('species', axis=1)
y = df['species']

# Step 8: Train-test split
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42
)

# Step 9: Train Random Forest model
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Step 10: Predict and evaluate
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)

print(f"\n Model Accuracy: {accuracy * 100:.2f}%")
print("\n Classification Report:\n", classification_report(y_test, y_pred))

# Step 11: Confusion matrix
conf_mat = confusion_matrix(y_test, y_pred)
sns.heatmap(conf_mat, annot=True, fmt='d', cmap='Greens',
            xticklabels=model.classes_, yticklabels=model.classes_)
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.title("Confusion Matrix")
plt.show()